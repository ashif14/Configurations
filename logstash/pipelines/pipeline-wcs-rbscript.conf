input {
  beats {
    port => 5044
    type => "log"
    id => "filebeat_1"
  }
}

filter {
    # If log file is SystemOut
    if [fields][log_type] == "SystemOut" {
        grok {
            patterns_dir => ["../patterns"]
			
			match => ["message", "\[%{DATA:timestamp} %{WORD:tz}\] %{BASE16NUM:was_threadID} %{WORD:was_shortname} %{SPACE}%{WORD:was_loglevel} %{SPACE}%{DATA:message} %{SPACE}REQ_%{REQ_STATUS:request_status} %{SPACE}%{WORD:transaction_id}"]
            match => ["message", "\[%{DATA:timestamp} %{WORD:tz}\] %{BASE16NUM:was_threadID} %{WORD:was_shortname} %{SPACE}%{WORD:was_loglevel} %{SPACE}%{SPACE}%{SPACE}%{WORD:was_errorcode}: %{SPACE}%{GREEDYDATA:message}"]
            match => ["message", "\[%{DATA:timestamp} %{WORD:tz}\] %{BASE16NUM:was_threadID} %{WORD:was_shortname} %{SPACE}%{WORD:was_loglevel} %{SPACE}%{SPACE}%{SPACE} \[%{GREEDYDATA:was_sibbus}\] +%{WORD:was_errorcode}: %{SPACE}%{GREEDYDATA:message}"]
            match => ["message", "\[%{DATA:timestamp} %{WORD:tz}\] %{BASE16NUM:was_threadID} %{WORD:was_shortname} %{SPACE}%{WORD:was_loglevel} %{GREEDYDATA:message2} +%{WORD:was_errorcode}: %{SPACE}%{GREEDYDATA:message}"]
            match => ["message", "\[%{DATA:timestamp} %{WORD:tz}\] %{BASE16NUM:was_threadID} %{WORD:was_shortname} %{SPACE}%{WORD:was_loglevel} %{GREEDYDATA:message2}\) +%{WORD:was_errorcode} +%{SPACE}%{GREEDYDATA:message}"]
            match => ["message", "\[%{DATA:timestamp} %{WORD:tz}\] %{BASE16NUM:was_threadID} %{WORD:was_shortname} %{SPACE}%{WORD:was_loglevel} %{SPACE}%{GREEDYDATA:message}"]
            overwrite => [ "message" ]
        }
        date{
            match => ["timestamp", "dd/MM/YY HH:mm:ss:SSS", "M/d/YY HH:mm:ss:SSS", "MM/d/YY HH:mm:ss:SSS", "M/dd/YY HH:mm:ss:SSS", "MM/dd/YY H:mm:ss:SSS", "M/d/YY H:mm:ss:SSS", "MM/d/YY H:mm:ss:SSS", "M/dd/YY H:mm:ss:SSS"]
        }


        # ruby {
        #     path => "../scripts/request_start.rb"
        # }
        
        #Using ruby scripts
        if[request_status] == "START" {
            ruby  {
                path => "../scripts/request_start.rb"
                script_params => {
                    "thread_id" => "%{was_threadID}"
                    "transaction_id" => "%{transaction_id}"
                }
            }
        } else if [request_status] == "END" {
            ruby {
                path => "../scripts/request_end.rb"
                script_params =>  {
                    "thread_id" => "%{was_threadID}"
                }
            }
        } else  {
            ruby{
                path => "../scripts/request_append.rb"
            }
        }
    }

}

output {
# if "_grokparsefailure" not in [tags] {
  # Sending properly parsed log events to elasticsearch
  elasticsearch {
    hosts => ["localhost:9200"]
    # Elastic Credentials
    user => elastic
    password => elastic
	manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
	document_type => "%{[@metadata][type]}"
# }
 }
}